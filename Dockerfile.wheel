# Multi-stage Dockerfile for building pyoctomap wheels
FROM quay.io/pypa/manylinux_2_28_x86_64:2025.09.19-1 AS builder

# Install build dependencies
RUN yum install -y cmake3 make gcc gcc-c++ git

# Copy source code
COPY . /project
WORKDIR /project

# Build OctoMap C++ library
RUN cd src/octomap && \
    mkdir -p build && \
    cd build && \
    cmake3 .. -DCMAKE_BUILD_TYPE=Release && \
    make -j$(nproc) && \
    make install && \
    ldconfig

# Copy libraries to the expected location
RUN mkdir -p src/octomap/lib && \
    find /usr/local/lib -name "*.so*" -exec cp {} src/octomap/lib/ \; && \
    find /usr/local/lib -name "*.a" -exec cp {} src/octomap/lib/ \; && \
    echo "Libraries copied:" && \
    ls -la src/octomap/lib/

# Find the correct Python path
RUN find /opt/python -name "python" -type f | head -5

# Install Python build tools
RUN /opt/python/cp311-cp311/bin/pip install --upgrade pip setuptools wheel

# Build the wheel
RUN /opt/python/cp311-cp311/bin/python setup.py bdist_wheel

# Repair the wheel for manylinux compatibility
RUN /opt/python/cp311-cp311/bin/pip install auditwheel && \
    /opt/python/cp311-cp311/bin/auditwheel repair dist/*.whl -w dist/

# Final stage - just copy the built wheel
FROM alpine:latest
RUN apk add --no-cache bash
COPY --from=builder /project/dist/*.whl /wheels/
WORKDIR /wheels
CMD ["ls", "-la"]
