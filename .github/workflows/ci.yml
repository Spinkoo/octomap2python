name: CI Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive  # Fetch OctoMap submodule
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential pkg-config
    
    - name: Build OctoMap C++ library
      run: |
        cd src/octomap
        mkdir -p build
        cd build
        cmake ..
        make -j$(nproc)
        sudo make install
        sudo ldconfig
    
    - name: Install Python build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel numpy cython pytest
    
    - name: Build and install package
      run: |
        # Build wheel and install it
        python setup.py bdist_wheel
        
        # Debug: Check what was built
        echo "=== Checking built wheel ==="
        ls -la dist/
        unzip -l dist/*.whl | grep -E '\.(so|dylib|dll)' || echo "No shared libraries found in wheel"
        
        pip install dist/*.whl

    
    - name: Run comprehensive tests
      run: |
        # Temporarily rename source directory to avoid import shadowing
        mv octomap _octomap_source
        python -m pytest unit_test/test_build.py -v
        mv _octomap_source octomap
    
    - name: Run additional unit tests
      run: |
        # Run other unit tests (excluding test_build.py which we already ran)
        mv octomap _octomap_source
        python -m pytest unit_test/ --ignore=unit_test/test_build.py -v --tb=short
        mv _octomap_source octomap
    
    - name: Install visualization dependencies for examples
      run: |
        pip install open3d matplotlib
    
    - name: Test examples (if they exist)
      run: |
        if [ -f "examples/basic_test.py" ]; then
          echo "üß™ Testing basic example..."
          mv octomap _octomap_source
          cd examples
          python basic_test.py
          cd ..
          mv _octomap_source octomap
        else
          echo "‚ÑπÔ∏è  No basic test example found"
        fi
