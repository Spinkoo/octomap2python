jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: release
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Python on the runner
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"

    - name: Build wheels using manylinux2014 container
      run: |
        # Pull the container image
        docker pull quay.io/pypa/manylinux2014_x86_64

        # Run all build steps inside the container
        docker run --rm -v "$(pwd)":/work -w /work quay.io/pypa/manylinux2014_x86_64 sh -c '
          # 1. Install system dependencies inside the container
          yum install -y cmake

          # 2. Build the C++ library
          cd src/octomap && mkdir build && cd build
          cmake ..
          make -j$(nproc)
          make install
          ldconfig
          cd /work # Go back to the root

          # 3. Install Python build tools using the container's Python
          #    Note: We specify the Python version provided by the container
          /opt/python/cp39-cp39/bin/pip install build setuptools wheel numpy cython auditwheel

          # 4. Build the wheel
          /opt/python/cp39-cp39/bin/python -m build --wheel

          # 5. Repair the wheel to bundle the C++ library
          auditwheel repair dist/*.whl -w dist/
        '
        
    - name: Clean up and list artifacts
      run: |
        # The original linux wheel is no longer needed, only the repaired manylinux one
        rm dist/*-linux_x86_64.whl
        echo "Final distributions to be published:"
        ls -la dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}